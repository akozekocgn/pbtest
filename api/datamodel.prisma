type User {
  id: Int! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  email: String! @unique
  username: String! @unique
  name: String
  phone: String
  website: String
  address: Address @relation(link: INLINE)
  company: Company @relation(link: INLINE)
  owned_projects: [Project!] @relation(name: "ProjectAuthor", onDelete: CASCADE)
  participated_projects: [Project!] @relation(name: "ProjectMember")
  owned_tasks: [Task!] @relation(name: "TaskAuthor", onDelete: CASCADE)
  assigned_tasks: [Task!] @relation(name: "TaskMember")
}

type Address {
  id: Int! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  street: String
  suite: String
  city: String
  zipcode: String
  geo: Json
}

type Company {
  id: Int! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String
  type: String
  bs: String
}

type Task {
  id: Int! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  finished: Boolean! @default(value: false)
  title: String!
  description: String
  author: User! @relation(link: INLINE, name: "TaskAuthor")
  members: [User!] @relation(link: TABLE, name: "TaskMember")
}

type Project {
  id: Int! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  active: Boolean! @default(value: false)
  title: String!
  description: String
  owner: User! @relation(link: INLINE, name: "ProjectAuthor")
  members: [User!] @relation(link: TABLE, name: "ProjectMember")
  # tasks: [Task!]
}